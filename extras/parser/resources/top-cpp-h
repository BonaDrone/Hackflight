/*
msp.hpp: header-only implementation of MSP parsing routines

Auto-generated code: DO NOT EDIT!

Copyright (C) Simon D. Levy 2018

This program is part of Hackflight

This code is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as 
published by the Free Software Foundation, either version 3 of the 
License, or (at your option) any later version.

This code is distributed in the hope that it will be useful,     
but WITHOUT ANY WARRANTY without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU Lesser General Public License 
along with this code.  If not, see <http:#www.gnu.org/licenses/>.
*/


#pragma once

#include <stdint.h>

class MSP_Message {

    friend class MSP_Parser;

    protected:

        static const int MAXBUF = 256;

        MSP_Message() { }
        uint8_t _bytes[MAXBUF];
        int _pos;
        int _len;

    public:

        uint8_t start();
        bool hasNext();
        uint8_t getNext();

};

class MSP_Parser {

    private:

        uint8_t  _state;

        uint8_t _message_direction;
        uint8_t _message_id;
        uint8_t _message_length_expected;
        uint8_t _message_length_received;
        uint8_t _message_buffer[MSP_Message::MAXBUF];
        uint8_t _message_checksum;

    public:

        MSP_Parser(void) ;

        void parse(uint8_t b);

